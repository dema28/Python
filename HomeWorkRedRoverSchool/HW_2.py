# Запрос ввода числа от пользователя
# n = int(input("Введите число: "))
#
# # Проверка, является ли число четным или нечетным
# if n % 2 == 0:
#     print("четное")
# else:
#     print("нечетное")

#---------------------------------------------------------
#
# # Запрос ввода дня недели от пользователя
# day = input("Введите день недели: ").strip().lower()
#
# # Проверка значения переменной day и вывод соответствующего сообщения
# if day == "суббота" or day == "воскресенье":
#     print("Сегодня выходной!")
# elif day == "среда":
#     print("Мне сегодня к стоматологу в 15:30")
# else:
#     print("Сегодня обычный день.")
#--------------------------------------------------------------

# # Запрос ввода целого числа от пользователя
# n = int(input("Введите целое число: "))
#
# # Запрос ввода строки от пользователя
# text = input("Введите строку: ")
#
# # Вывод строки text на экран n раз
# for _ in range(n):
#     print(text)
#--------------------------------------------------------------
#
# # Запрос ввода строки от пользователя
# message = input("Введите строку: ")
#
# # Определение множества гласных букв в кириллице
# vowels = "аеёиоуыэюя"
#
# # Подсчет количества гласных букв в строке
# count = sum(1 for char in message.lower() if char in vowels)
#
# # Вывод количества гласных букв
# print(count)
#-------------------------------------------------------------
#
# # Инициализация переменной для хранения суммы чисел
# total_sum = 0
#
# # Запуск цикла для ввода чисел
# while True:
#     # Запрос ввода числа от пользователя
#     number = int(input("Введите число: "))
#
#     # Проверка, является ли число отрицательным
#     if number < 0:
#         # Выход из цикла, если введено отрицательное число
#         break
#
#     # Добавление числа к сумме
#     total_sum += number
#
# # Вывод суммы всех введенных положительных чисел
# print(total_sum)
# ------------------------------------------------------------------
#
#     Целые числа (int): Хранят целые числа, например, 1, -42, 2023.
#   Числа с плавающей запятой (float): Хранят дробные числа, например, 3.14, -0.001, 2.718.
#     Строки (str): Хранят текстовые данные, например, "hello", "123", "Python".
#   Булевы значения (bool): Хранят логические значения, например, True и False.
#     Списки (list): Хранят упорядоченные коллекции элементов, например, [1, 2, 3], ['a', 'b', 'c'].
#   Кортежи (tuple): Хранят упорядоченные коллекции элементов, которые неизменны, например, (1, 2, 3), ('x', 'y').
#     Множества (set): Хранят уникальные элементы без определенного порядка, например, {1, 2, 3}, {'a', 'b'}.
#   Словари (dict): Хранят пары ключ-значение, например, {'name': 'Alice', 'age': 30}.
#
#  Различие между 1 и "1":
#
# 1 — это целое число (тип int), которое представляет числовое значение.
# "1" — это строка (тип str), которая представляет текстовый символ, а не числовое значение.
#
# Переменная — это именованная область памяти, в которой можно хранить данные. Переменные позволяют программистам хранить, изменять и извлекать данные в процессе выполнения программы.
#
# Зачем она нужна:
#
# Хранение данных: Переменные позволяют сохранять значения, которые могут быть использованы позже в программе. Например, можно сохранить число, строку или результат вычислений.
#
# Упрощение кода: С помощью переменных код становится более понятным и удобным. Например, вместо использования сложных выражений несколько раз, можно сохранить результат в переменной и использовать его.
#
# Изменяемость данных: Переменные позволяют изменять значение данных. Это полезно, когда нужно обновить информацию, например, подсчитать счет или изменить значение по мере выполнения программы.
#
# Управление состоянием программы: Переменные позволяют отслеживать и управлять состоянием программы, хранить промежуточные результаты и передавать данные между функциями и частями кода.